#!/bin/env groovy

pipeline {
  
  agent any
  
  tools {
    maven 'maven-3.6.3' 
  }
      
  environment {
    GIT_REPO = "https://github.com/saschascherrer/spring-petclinic.git"
    GIT_BRANCH = "main"
  }
  
  stages {
    stage('Git: Clone main branch') {
      steps {
        git branch: GIT_BRANCH, url: GIT_REPO
      }
    }
    
    stage ('Maven: Compile'){
      steps {
        sh './mvnw clean compile'
      }
    }
    
    stage('Maven: Test') {
       steps {
         sh './mvnw test'
       }
    }
    
    stage('Maven: Package') {
       steps {
         sh './mvnw package'
       }
    }

    stage('Package as Docker Image') {
      steps {
        sh 'buildah bud -t localhost/spring-petclinic:latest'
        sh 'buildah push localhost/spring-petclinic:latest docker-archive:docker-image.tar'
      }
    }    

    stage('Deploy Docker Image to Artifactory') {
      environment {
        JFROG_CREDS = credentials('jfrog-creds')
      }
      steps {
        sh 'buildah login -u $JFROG_CREDS_USR -p $JFROG_CREDS_PSW saschascherrer.jfrog.io'
        sh 'buildah push localhost/spring-petclinic:latest docker://saschascherrer.jfrog.io/default-docker-virtual/spring-petclinic:latest'
      }
    }
    
  }
  
  post {
    
    always {
      junit testResults: 'build/reports/**/*.xml', allowEmptyResults: true
    }
    
    success {
      archiveArtifacts artifacts: 'docker-image.tar', fingerprint: true
    }
    
  }
}
